/* page.module.css */
.container {
  display: flex;
  flex-wrap: wrap;
  background-color: #fedde9; /* Light pink background */
}

.textInput, .textOutput {
  flex: 1;
  padding: 20px;
  display: flex;
  flex-direction: column;
}

.textarea {
  width: 100%;
  height: 300px;
  margin-bottom: 10px;
  border: 2px solid #41e3fc; /* Light blue border */
  /* font-family: 'Arial', sans-serif; */
  font-size: 20px; /* Bigger font size for readability */
  line-height: 1.6;
  padding: 10px;
  background-color: #ffffff; /* White background */
  color: #41e3fc; /* Light blue text */
}
.textInputContainer {
    position: relative; /* This will contain the textarea and the button */
    width: 100%; /* Match the width of the textarea */
    /* height: 300px;  */
}

.textToSpeechButton {
    position: absolute; /* Position the button absolutely within the container */
    right: 10px; /* 10px from the right */
    bottom: 25px; /* 10px from the bottom of the textarea */
    border: none; /* No border for the button */
    background: none; /* Transparent background */
    cursor: pointer; /* Cursor pointer on hover */
    padding: 0; /* No padding */
    /* Adjust the size if needed, or remove if using Image component */
    /* width: 24px; 
    height: 24px;  */
}
  
  /* You can add hover effects or transitions if you like */
.textToSpeechButton:hover {
    background-color: rgba(0, 0, 0, 0.1); /* Example hover effect */
}

.textOutput strong {
    display: inline; /* This ensures that <strong> does not create a new line */
  }

.placeholder {
    color: #c0c0c0; /* Gray color, similar to placeholder text */
    
    /* Ensure that the placeholder text does not interfere with actual text. */
    pointer-events: none;
    user-select: none;
}

.controls {
  display: flex;
  flex-direction: column;
}

.controls label {
  margin-bottom: 10px;
  display: flex;
  flex-direction: column;
}

.controls select {
  padding: 5px;
  margin-top: 5px;
  border: 2px solid #41e3fc; /* Light blue border */
  background-color: #ffffff; /* White background */
  color: #41e3fc; /* Light blue text */
}

.textOutput {
  border: 2px solid #41e3fc; /* Light blue border */
  min-height: 300px;
  margin-top: 20px;
  white-space: pre-wrap;
  word-break: break-word;
  overflow-wrap: break-word;
  background-color: #fedde9; /* Light pink background */
  position: relative;                                
}

.textOutput:empty:before {
    content: 'Converted text...';
    display: block;
    /* Styles to mimic the placeholder */
    color: #c0c0c0;
  }

.dropdown {
    margin-bottom: 10px; /* Spacing between dropdowns */
  }
  
  .dropdownButton {
    background-color: #fedde9; /* Light pink background */
    border: 1px solid #41e3fc; /* Light blue border */
    color: #41e3fc; /* Light blue text */
    padding: 10px;
    width: 100%;
    text-align: left;
    cursor: pointer;
    position: relative;
  }
  
  .dropdownButton:after {
    content: 'â–¼';
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
  }
  
  .dropdownSelect {
    opacity: 0; /* Hide the select element visually */
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
  }
  

@media (max-width: 768px) {
  .textInput, .textOutput {
    flex-basis: 100%;
  }
}
